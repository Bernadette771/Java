import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

class Employee {
    private int id;
    private String name;
    private String position;
    private double salary;

    public Employee(int id, String name, String position, double salary) {
        this.id = id;
        this.name = name;
        this.position = position;
        this.salary = salary;
    }

    public int getId() {
        return id;
    }

    public String getName() {
        return name;
    }

    public String getPosition() {
        return position;
    }

    public double getSalary() {
        return salary;
    }

    public void setSalary(double salary) {
        this.salary = salary;
    }
}

class Department {
    private int id;
    private String name;
    private List<Employee> employees;

    public Department(int id, String name) {
        this.id = id;
        this.name = name;
        this.employees = new ArrayList<>();
    }

    public int getId() {
        return id;
    }

    public String getName() {
        return name;
    }

    public List<Employee> getEmployees() {
        return employees;
    }

    public void addEmployee(Employee employee) {
        employees.add(employee);
    }
}

class Company {
    private Map<Integer, Department> departments;

    public Company() {
        this.departments = new HashMap<>();
    }

    public void addDepartment(int id, String name) {
        departments.put(id, new Department(id, name));
    }

    public void hireEmployee(int departmentId, Employee employee) {
        if (departments.containsKey(departmentId)) {
            departments.get(departmentId).addEmployee(employee);
        } else {
            System.out.println("Department does not exist.");
        }
    }

    public void printEmployees() {
        System.out.println("Company Employees:");
        for (Department department : departments.values()) {
            System.out.println("Department: " + department.getName());
            for (Employee employee : department.getEmployees()) {
                System.out.println("Employee ID: " + employee.getId() +
                                   ", Name: " + employee.getName() +
                                   ", Position: " + employee.getPosition() +
                                   ", Salary: " + employee.getSalary());
            }
        }
    }
}

public class Main {
    public static void main(String[] args) {
        Company company = new Company();

        company.addDepartment(1, "Engineering");
        company.addDepartment(2, "Sales");

        company.hireEmployee(1, new Employee(1, "John Doe", "Software Engineer", 60000.00));
        company.hireEmployee(1, new Employee(2, "Jane Smith", "QA Engineer", 55000.00));
        company.hireEmployee(2, new Employee(3, "Alice Johnson", "Sales Manager", 75000.00));

        company.printEmployees();
    }
}
